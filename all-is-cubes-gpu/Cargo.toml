[package]
name = "all-is-cubes-gpu"
version = "0.4.0"
authors = ["Kevin Reid <kpreid@switchb.org>"]
edition = "2021"
rust-version = "1.65"
description = "Optional GPU rendering implementation for the all-is-cubes crate."
# TODO: add homepage = "..." when we have one
repository = "https://github.com/kpreid/all-is-cubes"
license = "MIT OR Apache-2.0"
# TODO: revisit categories once it's more settled how useful this is as an engine
categories = ["games", "graphics", "rendering", "rendering::engine"]

[package.metadata.docs.rs]
all-features = true

[lib]
# Disable running as benchmark so that the default doesn't interfere with Criterion usage.
bench = false

[features]
luminance = ["dep:luminance"]
wgpu = ["dep:wgpu"]

[dependencies]
all-is-cubes = { path = "../all-is-cubes", version = "0.4.0" }
bytemuck = { version = "1.12.1", default-features = false, features = ["derive"] }
futures-channel = { version = "0.3.24", default-features = false, features = ["alloc"] }
futures-core = { version = "0.3.17", default-features = false, features = ["alloc"] }
futures-util = { version = "0.3.21", default-features = false, features = ["alloc"] }
futures-task = { version = "0.3.17", default-features = false }
# Using `image` for headless renderer output.
image = { version = "0.24.2", default-features = false }
instant = "0.1.9"
log = { version = "0.4.14", default-features = false }
luminance = { version = "0.47.0", optional = true, default-features = false, features = ["derive"] }
once_cell = "1.4.1"
rand = { version = "0.8.2", default-features = false }
rand_xoshiro = "0.6.0" # TODO: remove this dep by removing the randomization code we're not using anyway
rayon = { version = "1.3.1" } # TODO: only used by raytrace_to_texture; enable that functionality or remove this
resource = "0.5.0"
thiserror = "1.0.22"
wgpu = { version = "0.14.0", optional = true }

[target.'cfg(target_family = "wasm")'.dependencies]
wgpu = { version = "0.14.0", optional = true, features = ["webgl"] }
# If we don't set this feature, it will try to access files at run time and fail
# since web wasm has no std::fs.
resource = { version = "0.5.0", features = ["force-static"] }

[dev-dependencies]
# Using tokio for async test-running.
tokio = { version = "1.18.0", features = ["macros", "rt", "rt-multi-thread", "parking_lot", "sync"] }
